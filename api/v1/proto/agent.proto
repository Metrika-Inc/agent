syntax = "proto3";
package metrika;


option go_package = ".;model";

import "io/prometheus/client/metrics.proto";

enum NodeState {
    down = 0;
    up = 1;
}

enum AgentState {
    healthy = 0;
    unhealthy = 1;
}

enum MessageType {
    metric = 0;
    event = 1;
}

// TODO: padding, find an optimal order. Maybe it's already done by the protoc?
message Message {
    int64 timestamp = 1;
    MessageType type = 2;
    NodeState nodeState = 3;
    AgentState agentState = 4;
    string name = 5;
    io.prometheus.client.MetricFamily metric = 6;
    Event event = 7;
    bytes altMetric = 8;
}

message Event {
    // TODO: implement me (AH-806)
    bytes body = 1;
}

message PlatformMessage {
    repeated Message data = 1;
    string agentUUID = 2;
}

message PlatformResponse {
    int64 timestamp = 1;
}

service agent {
    rpc Transmit (PlatformMessage) returns (PlatformResponse);
}