---
platform:

  # enabled: boolean, specifies if exporting data to Metrika Platform
  # is enabled. Default: true.
  enabled: true

  # api_key: authentication key for the Metrika platform
  api_key: <api_key>

  # batch_n: integer, the maximum number of metrics/events to be emitted at
  # each publish operation to the platform.
  batch_n: 1000

  # max_publish_interval: duration, the maximum interval to wait between two
  # consecutive publish operations to the platform.
  max_publish_interval: 5s
  
  # transport_timeout: duration, configures the timeout for publish
  # operations to the platform.
  transport_timeout: 10s

  # addr: string, network address of the platform for publishing
  addr: <platform_addr>

  # uri: string, platform publishing endpoint
  uri: /

buffer:

  # max_heap_alloc: integer, the maximum bytes of allocated heap objects as reported
  # by Go's runtime memstats, that are allowed by the agent before it starts
  # dropping metrics (default: 50MB).
  max_heap_alloc: 52428800

  # min_buffer_size: integer, the number of messages accepted into the buffer
  # regardless of max_heap_alloc value. 
  min_buffer_size: 2500

  # ttl: duration, a Time-To-Live for any buffered data. Data will never expire
  # for zero TTL values and stay in the buffer until they are evicted for publishing.
  ttl: 0s

runtime:

  logging:

    # outputs: list of outputs for runtime logs.
    #
    # Possible values are one of the standard I/O streams # (i.e stdout, stderr)
    # or a full/relative path to a filename (i.e logs/agent.log).
    outputs:
      - stdout

    # level: logging level for runtime logs.
    #
    # Possible values are: info (recommended), warning, debug, error.
    level: info

  # disable_fingerprint_validation: disables fingerprint validation on startup.
  #
  # Fingerprint validation is enabled by default and the agent will exit
  # immediately if checksums of the newly retrieved hostname and the cached do
  # not match. Checksum is cached under $HOME/.cache/metrikad/fingerprint.
  disable_fingerprint_validation: false

  # http_addr: string, network address to listen for HTTP requests to.
  #  - Get Prometheus metrics about the agent's runtime (GET /metrics).
  #  - Update its logging level (PUT /loglvl).
  #
  # Default value is empty string which disables HTTP across the agent. Enabling
  # any agent local endpoints, requires setting this value (i.e. 127.0.0.1:9000)
  http_addr:

  # metrics_enabled: bool, enable prometheus /metrics endpoint. Default is false.
  metrics_enabled: false

  # allowed_hosts: list[string], list of allowed Host HTTP headers to check when
  # validating HTTP requests processed by the agent such as /metrics. Use
  # comma-separated format when configuring this with an environment variable.
  allowed_hosts:
    - 127.0.0.1

  # sampling_interval: duration, default interval used by Watchers that use
  # polling for collecting metrics/events.
  sampling_interval: 5s

  # exporters: map[string]object, list of exporters to be enabled on agent startup.
  # The exporter constructor must be registered first in internal/pkg/contrib.
  exporters: {}

  # watchers: list[object], list of watchers to be enabled on agent startup.
  # The watcher constructor name must be registered first in the pkg/collector.
  watchers:
    - type: prometheus.proc.cpu
    - type: prometheus.proc.net.netstat_linux
    - type: prometheus.proc.net.arp_linux
    - type: prometheus.proc.stat_linux
    - type: prometheus.proc.conntrack_linux
    - type: prometheus.proc.diskstats
    - type: prometheus.proc.entropy
    - type: prometheus.proc.filefd
    - type: prometheus.proc.filesystem
    - type: prometheus.proc.loadavg
    - type: prometheus.proc.meminfo
    - type: prometheus.proc.netclass
    - type: prometheus.proc.netdev
    - type: prometheus.proc.sockstat
    - type: prometheus.proc.textfile
    - type: prometheus.time
    - type: prometheus.uname
    - type: prometheus.vmstat
